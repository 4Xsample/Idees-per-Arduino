#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

#define SS_PIN D8
#define RST_PIN D4

MFRC522 mfrc522(SS_PIN, RST_PIN); // Create MFRC522 instance

ESP8266WebServer server(80); // Create a web server on port 80

String cardId; // Variable to store the ID of the RFID card

const char* ssid = "YOUR_WIFI_SSID"; // Replace with your WiFi SSID
const char* password = "YOUR_WIFI_PASSWORD"; // Replace with your WiFi password

void setup() {
  Serial.begin(9600); // Initialize serial communication
  SPI.begin(); // Initialize SPI communication
  mfrc522.PCD_Init(); // Initialize MFRC522

  WiFi.begin(ssid, password); // Connect to WiFi network
  while (WiFi.status() != WL_CONNECTED) { // Wait for connection
    delay(500);
    Serial.println("Connecting to WiFi..");
  }

  Serial.println("Connected to the WiFi network");

  server.begin(); // Start the web server

  // Set up a route to handle the root of the website
  server.on("/", [] {
    // Send a response to the client with the appropriate HTML and CSS
    String response = "<html><head><style>body { background-color: black; color: white; font-family: Futura; text-align: center; }</style></head><body>The ID of the RFID card is: " + cardId + "</body></html>";
    server.send(200, "text/html", response);
  });
}

void loop() {
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) {
    return;
  }

  // Select the card
  if ( ! mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Get the ID of the card
  cardId = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    cardId += String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
    cardId += String(mfrc522.uid.uidByte[i], HEX);
  }

  // Reset the MFRC522
  mfrc522.PICC_HaltA();
  mfrc522.PCD_StopCrypto1();

  // Handle client requests
  server.handleClient();
}
